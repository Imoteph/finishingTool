{"name":"Finishingtool","tagline":"finshingTool ","body":"finishingTool\r\n=============\r\n\r\n## Command to run the tool ##\r\n\r\nThis is the command to do this post processing greedily\r\n\r\n\tpython finisher.py destinedFolder mummerPath\r\n\r\nTo run a repeat aware version:\r\n\r\n\tpython finisherSC.py destinedFolder mummerPath\r\n\t\r\n## Input and output files ##\r\n\r\nNote that it is assumed that you have \"contigs.fasta\" , \"raw_reads.fasta\" in the destinedFolder and mummerPath is your path to Mummer. For \"finisher.py\", the key output file is **improved2.fasta** in destinedFolder. For \"finisherSC.py\", the key output file is **improved3.fasta** in destinedFolder. \r\n\r\n\r\n## A sample test run ##\r\nHere is an example run with the pre-installed data files and softwares(e.g. Mummer, Gepard) [Please go to https://www.dropbox.com/sh/xjpt8xf5g1xf0ek/bGmZvt9Zfd to Download the EColi-Data set as test cases coz it is too big for GitHub].\r\n\r\n1. You may run the test cases as python finisher.py EcoliTestRun/ MUMmer3.23/\r\n2. After the processing, take the file whose name is **improved2.fasta** in destinedFolder and this is your output file.\r\n3. If you want to visualize the output against the reference, you can issue the command of python viewer.py. And you will obtain dotplots [in EcoliTestRun] of\r\n\ta) each contigs against the reference \r\n\tb) the whole new set of contigs against the reference. \r\n\tc) the whole original set of contigs against the reference. \r\n\r\n\r\n## Remarks ##\r\n1. After passing through the finishingTool, it is advised to use a polishing tool(e.g. Quiver) to polish the improved contigs in improved2.fasta\r\n2. If you have problem running scipy.weave, try to remove ~/.python27_compiled \r\n3. If you want polishing to be done for the gaps in the greedy mode, you can add polish at the end as follows:\r\n\t\r\n\tpython finisher.py EcoliTestRun/ MUMmer3.23/ polish\r\n","google":"UA-52516611-1","note":"Don't delete this file! It's used internally to help with page regeneration."}