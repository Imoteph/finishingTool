{"name":"Finishingtool","tagline":"finshingTool ","body":"FinisherSC\r\n=============\r\nIf you encounter any issue, please feel free to directly contact me at kklam@eecs.berkeley.edu\r\nMy name is  Ka-Kit Lam. \r\n\r\nOur paper is located at http://biorxiv.org/content/early/2014/10/14/010215 \r\n\r\n## Command to run the tool ##\r\n\r\nHere is the command to run the tool:\r\n\r\n\tpython finisherSC.py destinedFolder mummerPath\r\n\t\r\n## Input and output files ##\r\n\r\nNote that it is assumed that you have \"contigs.fasta\" , \"raw_reads.fasta\" in the destinedFolder and mummerPath is your path to Mummer. Therefore, please rename the files in the destinedFolder if needed. For \"finisherSC.py\", the key output file is **improved3.fasta** in destinedFolder. \r\n\r\n\r\n## A sample test run ##\r\nHere is an example run with the pre-installed data files and softwares(e.g. Mummer, Gepard) [Please go to https://www.dropbox.com/sh/xjpt8xf5g1xf0ek/bGmZvt9Zfd to Download the EColi-Data set as test cases coz it is too big for GitHub].\r\n\r\n1. You may run the test cases as python finisherSC.py EcoliTestRun/ MUMmer3.23/\r\n2. After the processing, take the file whose name is **improved3.fasta** in destinedFolder and this is your output file.\r\n3. If you want to visualize the output against the reference, you can use software like Gepard.\r\n\r\n## Options[Supplementary usage] ##\r\na)Fast mode (e.g. for large and complex genomes , you may want to use this mode to get results faster; However, there will be a bit of computation vs quality trade-off if you want to use this mode; We suggest that you use this mode only when you got stuck in the standard mode): \r\n\r\n\tpython finisherSC.py destinedFolder MUMmer3.23 -f True \r\n[It means that you want to use the fast mode ]\r\n\r\nb)Pick from previous jobs (e.g. you have got improved2.fasta but the cluster node timeout and you want to start from improved2.fasta instead of from scratch)\r\n\r\n\tpython finisherSC.py destinedFolder MUMmer3.23  -p improved2.fasta\r\n\r\nc)Mapping between old contigs and new contigs(e.g. you want to know how the contigs from contigs.fasta are mapped to improved3.fasta )\r\n\r\n\tpython finisherSC.py destinedFolder MUMmer3.23 -o contigs.fasta_improved3.fasta\r\n[It will then output the alignment of improved3.fasta against contigs.fasta. The output will be shown in the terminal and in mappingResults.txt at the destinedFolder]\r\n\r\nd)Help. You can always use -h to get the usage suggestion. \r\n\r\n\tpython finisherSC.py -h\r\n\r\n\r\n## Remarks ##\r\n1. After passing through the finishingTool, it is advised to use a polishing tool(e.g. Quiver) to polish the improved contigs( i.e. improved3.fasta )\r\n2. If you have problem running scipy.weave, try to remove ~/.python27_compiled \r\n3. There is an experimental improvement based on repeat phasing and the further improved file is improved4.fasta. An illustration of that part is given in Fig. 7 of http://arxiv.org/abs/1402.6971 . To experiment with that, first run finisherSC.py as before. After that, you can issue the following command:\r\n\r\n\tpython experimental/newPhasing.py destinedFolder mummerPath\r\n\r\n\r\n\r\n","google":"UA-52516611-1","note":"Don't delete this file! It's used internally to help with page regeneration."}